         \\ A //

#include <bits/stdc++.h>
using namespace std;

int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int n;
    cin>>n;
    vector<string>f(n); vector<int>s(n);
    for(int i=0; i<n; i++){
        cin>>f[i]>>s[i];
    }
    sort(f.begin(), f.end()); sort(s.begin(), s.end());
    for(int i=0; i<n; i++){
        cout<<f[i]<<" "<<s[i]<<"\n";
    }
}


          \\ B //


#include <iostream>
#include <iomanip>
using namespace std;
int main() {
    long long n;
    cin >> n;

    for (int i = 0; i <= n; ++i) {
        if (n > 0) {
            long long result = 1;
            for (int j = 0; j < i; ++j) {
                result *= i;
            }
            cout << result << " ";
        }
    }

    return 0;
}


        \\ C //


#include <iostream>
#include <stack>
#include <cmath>
#include <algorithm>
using namespace std;
int main(){
    string s;
    cin>>s;
    double b=0;
    stack<int> st;
    for(int i=0;i<s.size();i++){
        if(!st.empty()){
            b=sqrt(st.top()*10+(s[i]-'0'));
            if(b==round(b)) st.pop();
            else st.push(s[i]-'0');
        }
        else st.push(s[i]-'0');
    }
    if(st.empty())cout<<"Stack is empty";
    else{
        while(!st.empty()){
            cout<<st.top();
            st.pop();
        }
    }

}


          \\ D //


#include <bits/stdc++.h>
using namespace std;
#define ull unsigned long long
bool comp(vector<int>first, vector<int>second){
    int s1=0, s2=0;
    for(int i=0; i<max(first.size(), second.size()); i++){
        if(i<first.size())s1+=first[i];
        if(i<second.size())s2+=second[i];
    }
    if(s1<s2) return true;
    else if(s1==s2){
        if(first.size()<second.size()) return true;
        else if(first.size()==second.size()){
            for(int i=0; i<first.size(); i++){
                if(first[i]>second[i])return false;
            }
            return true;
        }
        else return false;
    }
    else return false;
}
int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int n;
    cin>>n;
    vector<vector<int>>base(n);
    for(int i=0; i<n; i++){
        int k; cin>>k;
        vector<int>pod(k);
        for(int j=0; j<k; j++)cin>>pod[j];
        base[i]=pod;
    }
    sort(base.begin(), base.end(), comp);
    for(auto vec:base){
        for(int i:vec) cout<<i<<" ";
        cout<<"\n";
    }

}


         \\ E //


#include <bits/stdc++.h>
using namespace std;
#define ull unsigned long long
#define d double
d res=0;
void print(pair<string, d>value){
    cout<<value.first<<" "<<value.second/res*100<<"\n";
}
int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int t;
    cin>>t;
    map<string, d>vp;
    while(t--){
        d n, tp2;string tp1;
        cin>>n;
        for(int i=0; i<n; i++){
            cin>>tp1>>tp2;
            vp[tp1]+=tp2;
            res+=tp2;
        }
    }
    for_each(vp.begin(), vp.end(), print);

}


        \\ F //


#include <bits/stdc++.h>
using namespace std;
#define pb push_back

int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int n;
    double f, s, t, c, kr=0, sum=0;
    cin>>n;
    for(int i=0; i<n; i++){
        cin>>f>>s>>t>>c;
        kr+=c; 
        int sm =f+s+t;
        if(f+s>=30 && t>=20){
            sum += (((sm-50)/5) * 1.0/3.0 + 1.0)*c;
        }
    }
    cout<<sum/kr;
}


         \\ G //


#include <bits/stdc++.h>
using namespace std;
int main(){
    int n; cin>>n; string s1, s2; int n1, n2;
    map<pair<pair<string, int>, pair<string, int>>, int>mp;
    for(int i=0; i<n; i++){
        cin>>s1>>n1>>s2>>n2;
        mp[{{s1, n1}, {s2, n2}}] = n1+n2;
    }
    for(auto it=mp.begin(); it!=mp.end(); it++){
        cout<<(it->first).first.first<<" and "<<(it->first).second.first<<" "<<it->second<<"\n";
    }
}


        \\ H //


#include <bits/stdc++.h>
using namespace std;


int main(){
    int n;
    cin >> n;
    vector<int> v;
    
    for(int i = 0; i < n; i++){
        int x; cin >> x;
        if(find(v.begin(), v.end(), x) == v.end()) v.push_back(x);
    }

    do{
        for(auto & i: v){
            cout << i << ' ';
        }
        cout << endl;
    }
    while(next_permutation(v.begin(), v.end()));
}


       \\ I //


#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <string>
#include <bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin >> n;

    vector<int> a(n);

    for(int i = 0; i < n; ++i){
        cin >> a[i];
    }

    vector<int> rev = a;
    reverse(rev.begin(), rev.end());

    
    for(int i = 0; i < n; ++i){
        if(rev[i] == a[i]){
            cout << "OK" << endl;
        }else{
            cout << "Instead of " << a[i] << " here was " << rev[i] << endl;
        }
    }

    return 0;
} 


       \\ J //


#include <iostream>
#include <vector>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <string>
#include <bits/stdc++.h>
using namespace std;

int main(){
    int n,m;
    cin >> n >> m;

    vector<int> a(n);

    for(int i = 0; i < n; ++i){
        cin >> a[i];
    }

    

    rotate(a.begin(), a.begin() + m, a.end());

    reverse(a.begin(), a.end());

    for(int i = 0; i < n; ++i){
        cout << a[i] << " ";
    }

    return 0;
} 


      \\ K //


#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>


using namespace std;

bool isPrime(int num) {
    if (num <= 1) {
        return false;
    }

    int sqrtNum = sqrt(num);
    for (int i = 2; i <= sqrtNum; ++i) {
        if (num % i == 0) {
            return false;
        }
    }

    return true;
}

int main() {
    
    int n;
    cin >> n;

    vector<int> sequence(n);
    for (int i = 0; i < n; ++i) {
        cin >> sequence[i];
    }

    
    int primeCount = count_if(sequence.begin(), sequence.end(), [](int num) { return isPrime(abs(num)); });

    
    cout << primeCount << '\n';

    return 0;
}


      \\ L //


#include <iostream>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;

    vector<int> numbers;
    for (int i = 1; i <= n; ++i) {
        fill_n(back_inserter(numbers), i, i);
    }

    for (int num : numbers) {
        cout << num << " ";
    }

    return 0;
}


        \\ M //


#include <bits/stdc++.h>
using namespace std;
#define pb push_back
int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int n,m ;
    cin>>n>>m;
    vector<int>f(n); vector<int>s(m);
    for(int i=0; i<n; i++)cin>>f[i];
    for(int i=0; i<m; i++)cin>>s[i];
    vector<int>::iterator ip = unique(f.begin(), f.end());
    f.erase(ip, f.end());
    ip= unique(s.begin(), s.end());
    s.erase(ip, s.end());
    vector<int>t;
    for(int i=0; i<max(f.size(), s.size()); i++){
        if(i<f.size()) t.pb(f[i]);
        if(i<s.size()) t.pb(s[i]);
    }
    ip = unique(t.begin(), t.end());
    t.erase(ip, t.end());
    for(int i:t) cout<<i<<" ";
}


        \\ N //


#include <bits/stdc++.h>
using namespace std;

int main(){
    int n, tp;
    cin>>n;
    map<int, int>mp;
    for(int i=0; i<n; i++){
        cin>>tp;
        mp[tp]++;
    }
    int res[n], i = 0; res[n/2]=-1;
    for(auto v:mp){
        int x = v.second/2;
        while(x--){
            res[i] = v.first;
            res[n-1-i++] = v.first;
        }
        if(v.second%2 && res[n/2]!=-1){
            cout<<"Impossible";
            return 0;
        }
        else if(v.second%2) res[n/2] = v.first;
    }
    for(auto v:res) cout<<v<<" ";

    return 0;
}



        \\ O //


#include <bits/stdc++.h>
using namespace std;
#define pb push_back
void bin(int x){
    string bn;
    while(x){
        bn += to_string(x%2); x/=2;
    }
    reverse(bn.begin(), bn.end());
    cout<<bn<<"\n";
}
int main(){
    // freopen("ladder.in", "r", stdin);
    // freopen("ladder.out", "w", stdout);
    int n;
    cin>>n;
    vector<int>d(n);
    for(int i=0; i<n; i++) cin>>d[i];
    for_each(d.begin(), d.end(), bin);
}
